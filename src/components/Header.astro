---
const navItems = [
  { text: 'Home', href: '/' },
  { text: 'About', href: '/about' },
  { text: 'Blog', href: '/blog' },
  { text: 'Contact', href: '/contact' },
];

// Get current path for active nav item
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<header class="sticky top-0 z-50 w-full backdrop-blur-md bg-white/90 dark:bg-midnight-950/90 border-b border-midnight-200 dark:border-midnight-800 transition-colors duration-300">
  <div class="container mx-auto py-4 px-4 md:px-8 flex items-center justify-between">
    <a href="/" class="text-xl font-heading font-bold text-midnight-900 dark:text-white hover:text-coral-500 dark:hover:text-coral-400 transition-colors">
      <span class="text-coral-500 dark:text-coral-400">Alex</span> Power
    </a>
    
    <div class="flex items-center gap-4">
      <!-- Mobile menu button -->
      <button id="menu-toggle" class="md:hidden text-midnight-900 dark:text-white" aria-label="Toggle Menu">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
      
      <!-- Desktop navigation -->
      <nav class="hidden md:flex items-center gap-8">
        {navItems.map(item => (
          <a 
            href={item.href} 
            class={`font-medium hover:text-coral-500 dark:hover:text-coral-400 transition-colors ${
              (currentPath === '' && item.href === '/') || 
              (currentPath !== '' && item.href !== '/' && currentPath.startsWith(item.href.slice(1))) 
                ? 'text-coral-500 dark:text-coral-400' 
                : 'text-midnight-800 dark:text-midnight-200'
            }`}
          >
            {item.text}
          </a>
        ))}
      </nav>
      
      <!-- Theme toggle button -->
      <button id="theme-toggle" class="p-2 text-midnight-900 dark:text-white hover:text-coral-500 dark:hover:text-coral-400 transition-colors" aria-label="Toggle Theme">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 hidden dark:block">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 block dark:hidden">
          <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z" />
        </svg>
      </button>
    </div>
  </div>
  
  <!-- Mobile menu (hidden by default) -->
  <div id="mobile-menu" class="fixed inset-0 bg-white dark:bg-midnight-950 z-50 flex flex-col items-center justify-center hidden">
    <button id="close-menu" class="absolute top-6 right-6 text-midnight-900 dark:text-white" aria-label="Close Menu">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
    
    <nav class="flex flex-col items-center gap-8 text-2xl">
      {navItems.map(item => (
        <a 
          href={item.href} 
          class={`font-medium hover:text-coral-500 dark:hover:text-coral-400 transition-colors ${
            (currentPath === '' && item.href === '/') || 
            (currentPath !== '' && item.href !== '/' && currentPath.startsWith(item.href.slice(1))) 
              ? 'text-coral-500 dark:text-coral-400' 
              : 'text-midnight-800 dark:text-midnight-200'
          }`}
        >
          {item.text}
        </a>
      ))}
    </nav>
  </div>
</header>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  
  themeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });
  
  // Mobile menu functionality
  const menuToggle = document.getElementById('menu-toggle');
  const closeMenu = document.getElementById('close-menu');
  const mobileMenu = document.getElementById('mobile-menu');
  
  menuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  });
  
  closeMenu?.addEventListener('click', () => {
    mobileMenu?.classList.add('hidden');
    document.body.style.overflow = '';
  });
  
  // Close mobile menu when clicking a link
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      document.body.style.overflow = '';
    });
  });
</script>